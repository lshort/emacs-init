{-# LANGUAGE QuasiQuotes, TypeFamilies, GeneralizedNewtypeDeriving, FlexibleContexts #-}
{-# LANGUAGE TemplateHaskell, OverloadedStrings, GADTs, MultiParamTypeClasses #-}
import Yesod
import Control.Applicative
import Data.Text
import Database.Persist
import Database.Persist.Sqlite
import Database.Persist.Quasi

data Piggies = Piggies

instance Yesod Piggies

share [mkPersist sqlSettings, mkMigrate "migrateAll"] [persistLowerCase|
Cheese
   name String
   color String
   deriving Show
|]

--data Cheese = Cheese { name :: Text, color :: Text } deriving Show

mkYesod "Piggies" [parseRoutes|
  / HomeR GET
  /page1 Page1R GET
  /page2 Page2R GET POST
|]

instance YesodPersist Piggies where
    type YesodPersistBackend Piggies = SqlPersist
    runDB action = runSql ":memory:" action

instance RenderMessage Piggies FormMessage where
    renderMessage _ _ = defaultFormMessage

getHomeR :: Handler RepHtml
getHomeR = defaultLayout $ do
    setTitle "My Page Title"
    [whamlet|<a href=@{Page1R}>Go to Page 1!|]
    toWidget [lucius| h1 { color: green; } |]
    addScriptRemote "https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"
    toWidget [julius|
$(function() {
    $("h1").click(function(){ alert("You clicked on the heading!"); });
});
|]
    toWidgetHead [hamlet| <meta name=keywords content="some sample keywords">|]
    toWidget [hamlet| <h1>Here's one way of including content |]
    [whamlet| <h2>Here's another |]
    toWidgetBody [julius| alert("This is included in the body itself");
|]

getPage1R = defaultLayout [whamlet|<a href=@{Page2R}>Go to page 2!|]
getPage2R = do 
    (widget, enctype) <- generateFormPost cheeseMForm
    defaultLayout [whamlet|
<form method=post action=@{Page2R} enctype=#{enctype}>
  ^{widget}
  <input type=submit>
<a href=@{HomeR}>Go to Home!
|]

postPage2R = do
    ((result,widget),enctype) <- runFormPost cheeseMForm
    defaultLayout [whamlet|
<form method=post action=@{Page2R} enctype=#{enctype}>
  ^{widget}
  <input type=submit>
<a href=@{HomeR}>Go to Home!
|]


cheeseMForm :: Html -> MForm Piggies Piggies (FormResult Cheese, Widget)
cheeseMForm =  renderDivs $ Cheese <$>
    areq textField "Name" Nothing  <*>
    areq textField "Color" Nothing

main :: IO ()
main = warpDebug 3000 Piggies

