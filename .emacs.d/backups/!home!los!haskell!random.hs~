module Dice
(
  
)
where

{-# LANGUAGE FlexibleInstances, FunctionalDependencies, MultiParamTypeClasses #-}

import System.Random
import Control.Monad
import Control.Monad.State




type RandomState a = State StdGen a

getRandom :: Random a => RandomState a
getRandom = do 
   gen <- get
   pullVal $ random gen
   where pullVal (a,b) = put b >> return a


main = do 
   x <- getStdGen
   let (a,y) = runState getRandom x
   let (b,z) = runState getRandom y
   setStdGen z
   print (a :: Int)
   print (b :: Int)

