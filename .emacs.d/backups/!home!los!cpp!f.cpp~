#include <iostream>
#include <complex>
#include <vector>
#include <mutex>
#include <deque>
#include <set>

using namespace std;


class elevator;
class elevator_controller
{
public:  
  enum up_down { UNDEFINED = -1, UP = 0, DOWN = 1 };
  struct request {
    enum up_down   direction;
    int            floor;
  };
  bool make_request( struct request input );
  void process_requests();
  bool add_elevator( unsigned int id, vector<int> floors_serviced );
  bool remove_elevator( unsigned int id );
private:  
  deque<struct request> request_queue;
  mutex queue_mtx;
  class elevator
  {
  public:
    bool open_doors();
    bool close_doors();
    bool change_floor( int floor );
    elevator( unsigned int id, vector<int> floors_serviced );
  };
  set<elevator> elevators;
};




int main() {
  cout << "goofus" << endl;
}
