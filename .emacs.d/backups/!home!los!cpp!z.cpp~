#include <string.h>
#include <cstdlib>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

// 'digit' counts from 0
int get_nth_digit( const int no, const int digit )  {
  char buf[10];
  snprintf( buf, 10, "%09d", no % 1000000000 );
  return( buf[digit] - '0' );
}

void radix_sort( vector<int> & ns, const int digits )  {
  int dig;
  vector<vector<int>> bins(10);
  for (int i=digits-1; i>=0; --i)  {
    for (int n : ns)  {
      dig = get_nth_digit( n, i );
      bins.at(dig).push_back(n);
    }
    ns.clear();
    for (auto & bin : bins) {
      for (int val : bin)
        ns.push_back(val);
      bin.clear();
    }
  }
}

int diff_by_n( vector<int> ns, int k )  
{
  int count=0;
  if (ns.size() < 2)
    return 0;
  radix_sort(ns, 9);
  auto p2 = ns.begin();
  auto p1 = p2++;
  int diff = *p2 - *p1;
  while ( 1 )  {
    if (diff==k)
      ++count;
    if (diff<=k) {
      ++p2;
    } else {
      ++p1;
    }
    if ( p2 == ns.end() )
      break;
    diff = *p2 - *p1;
  }
  return count;
}


int main( int argc, char *argv[] )  {
  cout << diff_by_n( vector<int>{1,2,3,4,5}, 1 ) << endl;
  cout << diff_by_n( vector<int>{1,3,5,4,6,7}, 2 ) << endl;
  cout << diff_by_n( vector<int>{211,133,255,144,266,177,111,233,155,244,166,277}, 22 ) << endl;
 
}
